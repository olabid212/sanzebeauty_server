const multer = require('multer');
const path = require('path');

// Set up storage configuration for multer
const storage = multer.diskStorage({
    destination: (req, file, cb) => {
        cb(null, 'uploads/'); // Destination folder for uploads
    },
    filename: (req, file, cb) => {
        const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);
        cb(null, uniqueSuffix + path.extname(file.originalname)); // Unique filename with original extension
    }
});

// File filter to only allow image uploads
const fileFilter = (req, file, cb) => {
    if (file.mimetype.startsWith('image/')) {
        cb(null, true);
    } else {
        cb(new Error('Only image files are allowed!'), false);
    }
};

// Multer configuration for handling multiple images (up to 10)
const upload = multer({
    storage: storage,
    limits: { fileSize: 5 * 1024 * 1024 }, // Max file size of 5MB per file
    fileFilter: fileFilter
}).array('images', 10); // Accept an array of images with a max of 10 files

// Middleware function to use in your routes
const handleUploads = (req, res, next) => {
    upload(req, res, (err) => {
        if (err instanceof multer.MulterError) {
            // Handle multer-specific errors
            return res.status(400).json({ error: err.message });
        } else if (err) {
            // Handle other errors
            return res.status(400).json({ error: err.message });
        }
        // Proceed to the next middleware or route handler if no errors
        next();
    });
};

module.exports = handleUploads;
